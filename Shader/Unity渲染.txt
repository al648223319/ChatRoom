unity渲染分为三层（Camera ，SortingLayer，orderLayer）

1.camera层
最高层为Camera层，可以在Camera的depth那里设置，设置之后，图形的渲染顺序就是先绘制depth低的相机下的物体，再绘制depth高的相机下的物体.
也就是说，depth高的相机会覆盖depth低的相机（具体的覆盖关系有don't clear， solid color等等几种）


2.sorting layer层
比Camera层稍低一层的是sorting layer层， 随便找一个可以设置sorting layer的地方，选择sorting layer，点添加按钮，就可以看到当前所有的sorting layer，并且可以更改sorting layer的顺序，排位靠后的sorting layer会覆盖排位靠前的sorting layer。 设置好sorting layer的相互关系之后，就可以给任何一个继承于Renderer类，或者有renderer的子类作为field的对象设置sorting layer了。 注意这些sorting layer的遮挡关系是在同一个camera的层级下的。 不同camera下的renderer渲染顺序以camera的depth为准。 有的component的sorting layer可以直接在unity editor里面设置，比如Sprite Renderer。?有的则需要用代码来设置，比如设置Particle system的sorting layer， 就需要在代码中取到 ParticleSystem.Renderer.SortingLayer 来进行设置。

3.sorting order
比sorting layer再低一层的是sorting order， 这个数字指代的是在同一个sorting layer下的渲染顺序，用法很明显就不赘述了。
需要注意不要混淆的是gameobject的layer，和renderer的sorting layer。 gameObject的layer个人理解是一个逻辑上的分层，用于camera的culling mask等。 而renderer的sorting layer则用于渲染。只有继承与renderer或者有renderer作为filed的component才需要设置sorting layer。

UGUI渲染
Render Mode
一、Screen Space-Camera

1.遵循刷油漆规则

2.依次由Render Camera的Depth值、Sorting ?Layer先后顺序、Order in Layer值决定

Render Camera不同时，由Render Camera的Depth决定

Render Camera相同时，由Sorting Layer先后顺序决定

Render Camera相同时，Sorting Layer相同，由Order in Layer值决定。



二、OverLay模式
1.永远覆盖在其他物体之上。出现在最上面。不受摄像机的Depth值影响。

2.有多个摄像机时，由摄像机的Depth值决定

3.只有一个摄像机时，由距离和方向决定World模式和Camera模式、它们的渲染结果 可前、可后、可穿插。



三、条件：同一个Canvas下，UI对象在Hierarchy窗口中越往上越先渲染，越往下越后渲染。



ps:渲染顺序并不能最终决定屏幕上图像显示，在各个物体的shader的深度测试和深度写入默认的情况下渲染顺序就是最终显示，但是当深度测试和深度写入改变时，最终图像就会发生改变



